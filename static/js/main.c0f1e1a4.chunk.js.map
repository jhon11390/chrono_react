{"version":3,"sources":["components/updateCrono.js","components/Crono.js","components/FormCrono.js","components/Data.js","components/AddCrono.js","App.js","serviceWorker.js","index.js"],"names":["UpdateCrono","props","handleChangeUpdate","e","setState","target","name","value","state","title","project","Row","className","Col","md","Form","Group","controlId","Label","Control","type","placeholder","onChange","this","bind","Button","variant","size","block","onClick","updatecard","changecard","React","Component","CronoCard","timer","startedOn","color","stateCrono","seconds","minutes","hours","intervalo","confirmhour","viewupdate","Card","Header","Body","Title","toString","length","span","offset","Alert","Link","href","deletethiscrono","startcrono","setInterval","changeColor","timercrono","clearInterval","valor","delete","id","FormCrono","handle","crear","cancelar","data","time","AddCrono","addcrono","App","handleChange","hide_form","show_form","handlekeypress","deleteCrono","Data","form_crono","number","Container","fluid","map","date","i","Crono","key","preventDefault","concat","index","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c0f1e1a4.chunk.js","sourcesContent":["import React from 'react';\nimport {Row, Col, Form, Button} from \"react-bootstrap\";\n\nclass UpdateCrono extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          title: this.props.title,\n          project: this.props.project\n        }\n      }\n  render(){\n    return (\n      <Row className=\"justify-content-md-center mt-4\">\n        <Col md=\"4\">\n          <Form>\n            <Row className=\"justify-content-md-center mt-4\">\n              <Col md=\"auto\">\n                <h4>Edit Timer</h4>\n              </Col>\n            </Row>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Titulo\" name=\"title\" onChange={this.handleChangeUpdate.bind(this)} value={this.state.title}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Project</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Nombre del proyecto\" name=\"project\" onChange={this.handleChangeUpdate.bind(this)} value={this.state.project}/>\n            </Form.Group>\n            <Row>\n              <Col md=\"6\">\n                <Button variant=\"primary\"  size=\"lg\" block  onClick={() => this.props.updatecard(this.state.title, this.state.project)}>\n                  Update\n                </Button>\n              </Col>\n              <Col md=\"6\">\n                <Button variant=\"danger\"  size=\"lg\" block onClick={() => this.props.changecard(false)}>\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    )\n  }\n\n  handleChangeUpdate = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  \n}\n\nexport default UpdateCrono;","import React from 'react';\nimport UpdateCrono from './updateCrono'\nimport {Row, Col, Card, Button, Alert} from \"react-bootstrap\";\nimport { FaTrashAlt, FaEdit} from 'react-icons/fa';\n\n\nclass CronoCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changecard= this.changecard.bind(this)\n    this.updatecard= this.updatecard.bind(this)\n    this.timer = null;\n    this.startedOn = 0;\n    this.state = {\n      color: 'success',\n      stateCrono: 'Start',\n      title: this.props.title,\n      project: this.props.project,\n      seconds: this.props.seconds,\n      minutes: this.props.minutes,\n      hours: this.props.hours,\n      intervalo: -1,\n      confirmhour: true,\n      viewupdate: false\n    }\n  }\n\n  \n\n  render(){\n    if(this.state.viewupdate){\n      return (\n        <UpdateCrono \n          title= {this.state.title}\n          project= {this.state.project}\n          changecard= {this.changecard}\n          updatecard= {this.updatecard}\n        />\n      )\n    } else {\n      return (\n\t    \t<Row className=\"justify-content-md-center mt-4\" >\n          <Col md=\"4\">\n            <Card>\n              <Card.Header>\n                <h2>{this.state.title}</h2>\n                <p>{this.state.project}</p>\n              </Card.Header>\n              <Card.Body>\n                <Card.Title>\n                  <Row className=\"text-center\">\n                    <Col>\n                      <h1>{this.state.hours.toString().length < 2 ? `0${this.state.hours}` : this.state.hours}:{this.state.minutes.toString().length < 2 ? `0${this.state.minutes}` : this.state.minutes}:{this.state.seconds.toString().length < 2 ? `0${this.state.seconds}` : this.state.seconds}</h1>\n                    </Col>\n                  </Row> \n                </Card.Title>\n                <Card.Title>\n                  <Row>\n                    <Col md={{ span: 3, offset: 10}}>\n                      <Alert.Link href=\"#\" onClick={this.deletethiscrono.bind(this)}><FaTrashAlt /> </Alert.Link>\n                      <Alert.Link href=\"#\" onClick={this.changecard.bind(this, true)}><FaEdit /></Alert.Link>\n                    </Col>\n                  </Row>\n                </Card.Title>\n                <Button variant={this.state.color} size=\"lg\" block onClick={this.startcrono.bind(this)}>{this.state.stateCrono}</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      )\n    }\n  }\n  changeColor(){\n    if(this.state.color === 'success'){\n      this.setState({\n        color: 'danger',\n        stateCrono: 'Stop'\n      })\n    } else {\n      this.setState({\n        color: 'success',\n        stateCrono: 'Start'\n      })\n    }\n  }\n  \n  timercrono(){\n    this.setState({\n      intervalo: setInterval(() => {\n        const maxtime = 59\n        this.setState({\n          seconds: this.state.seconds === maxtime ? 0 : this.state.seconds + 1, \n          minutes: this.state.seconds === maxtime ?  (this.state.minutes === maxtime ? 0 : this.state.minutes + 1): this.state.minutes,\n          hours: this.state.minutes === maxtime ? (this.state.confirmhour ? this.state.hours + 1 : this.state.hours) : this.state.hours,\n          confirmhour: this.state.minutes === maxtime ? false : true\n        })\n      }, 1000)\n    })\n  }\n\n  startcrono(){\n    this.changeColor()\n    if(this.state.intervalo === -1){\n      this.timercrono()\n    } else {\n      clearInterval(this.state.intervalo)\n      this.setState({\n        intervalo: -1\n      })\n    }\n  }\n\n  changecard(valor){\n    this.setState({\n      viewupdate: valor\n    })\n  }\n\n  updatecard(title, project){\n    this.setState({\n      title: title,\n      project: project,\n      viewupdate: false\n    })\n  }\n  deletethiscrono(){\n    if(this.state.color === \"danger\"){\n      this.startcrono()\n    } else {\n      clearInterval(this.state.intervalo)\n      this.setState({\n        intervalo: -1\n      })\n    }\n    this.props.delete(this.props.id)\n  }\n}\n\nexport default CronoCard;","import React from 'react';\nimport {Row, Col, Form, Button} from \"react-bootstrap\";\n\nclass FormCrono extends React.Component {\n\n  render(){\n    return (\n      <Row className=\"justify-content-md-center mt-4\">\n        <Col md=\"4\">\n          <Form>\n            <Row className=\"justify-content-md-center mt-4\">\n              <Col md=\"auto\">\n                <h4>New Timer</h4>\n              </Col>\n            </Row>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Titulo\" name=\"title\" onChange={this.props.handle} value={this.props.title}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Project</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Nombre del proyecto\" name=\"project\" onChange={this.props.handle} value={this.props.project}/>\n            </Form.Group>\n            <Row>\n              <Col md=\"6\">\n                <Button variant=\"success\"  size=\"lg\" block onClick={this.props.crear}>\n                  Create\n                </Button>\n              </Col>\n              <Col md=\"6\">\n                <Button variant=\"danger\"  size=\"lg\" block onClick={this.props.cancelar}>\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default FormCrono;","const data = [\n  {\n    id: 0,\n    title: \"Crear nuevo proyectos\", \n    project: \"Make it Real\", \n    time: \"00:00:00\",\n    seconds: 0,\n    minutes: 0,\n    hours: 0\n  }, \n  {\n    id: 1,\n    title: \"Ayudar estudiantes\", \n    project: \"Make it Real\", \n    time: \"00:00:00\",\n    seconds: 0,\n    minutes: 0,\n    hours: 0\n  },\n  {\n    id: 2,\n    title: \"Mejorar el Css\", \n    project: \"Tu naranja\", \n    time: \"00:00:00\",\n    seconds: 0,\n    minutes: 0,\n    hours: 0\n  }\n]\n\nexport default data;","import React from 'react';\nimport {Row, Col, Alert} from \"react-bootstrap\";\nimport { FaPlus} from 'react-icons/fa';\n\nclass AddCrono extends React.Component {\n  \n  render(){\n    return (\n      <Row className=\"justify-content-md-center mt-4\">\n        <Col md=\"auto\">\n          <Alert.Link href=\"#\" onClick={this.props.addcrono}><FaPlus /></Alert.Link>\n        </Col>\n      </Row>\n    )\n  }  \n}\n\nexport default AddCrono;","import React from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport CronoCard from './components/Crono'\nimport FormCrono from './components/FormCrono'\nimport Data from './components/Data'\nimport AddCrono from './components/AddCrono'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.hide_form= this.hide_form.bind(this)\n    this.show_form= this.show_form.bind(this)\n    this.handlekeypress= this.handlekeypress.bind(this)\n    this.deleteCrono= this.deleteCrono.bind(this)\n    this.state = {\n      data: Data,\n      title: '',\n      project: '',\n      form_crono: false,\n      number: 3\n    }\n  }\n  render() {\n    return (\n      <Container fluid className=\"mt-4\">\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <h1>Timers</h1>\n          </Col>\n        </Row>\n          {this.state.data.map((date, i)=> {\n            return (\n              <CronoCard \n                key = {date.id}\n                id= {i}\n                title= {date.title}\n                project= {date.project}\n                time= {date.time}\n                seconds= {date.seconds}\n                minutes= {date.minutes}\n                hours= {date.hours}\n                delete= {this.deleteCrono}\n                data= {this.state.data}\n              />\n            )\n          })}\n        {this.state.form_crono ? <FormCrono cancelar= {this.hide_form} crear={this.handlekeypress} title={this.state.title} project={this.state.project} handle={this.handleChange}/> : <div></div>}\n        \n        <br/>\n        <AddCrono addcrono= {this.show_form}/>\n        <br/>\n      </Container>\n    );\n  }\n\n  show_form(){\n    this.setState({\n      form_crono: true\n    })\n  }\n  hide_form(){\n    this.setState({\n      form_crono: false\n    })\n  }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  handlekeypress(e) {\n    e.preventDefault()\n    this.setState({\n      data: this.state.data.concat({id: this.state.number, title: this.state.title, project: this.state.project, time: \"00:00:00\", seconds: 0, minutes: 0, hours: 0}),\n      form_crono: false,\n      title: '',\n      project: '',\n      number: this.state.number + 1\n    })\n  }\n  \n  deleteCrono(id) {\n    const data = this.state.data\n    const index = id\n    this.setState({\n      data: data.filter((date, i) =>\n        index !== i\n      )\n    })\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}